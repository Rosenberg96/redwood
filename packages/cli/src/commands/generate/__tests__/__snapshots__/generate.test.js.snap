// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generate cell files 1`] = `
Object {
  "/path/to/project/web/src/components/BlogPostCell/BlogPostCell.js": "export const QUERY = gql\`
  query {
    blogPost {
      id
    }
  }
\`

export const Loading = () => <div>Loading...</div>

export const Empty = () => <div>Empty</div>

export const Failure = ({ error }) => <div>Error: {error.message}</div>

export const Success = ({ blogPost }) => {
  return JSON.stringify(blogPost)
}
",
  "/path/to/project/web/src/components/BlogPostCell/BlogPostCell.test.js": "import { render, cleanup, screen } from '@testing-library/react'

import { Loading, Empty, Failure, Success } from './BlogPostCell'

describe('BlogPostCell', () => {
  afterEach(() => {
    cleanup()
  })

  it('Loading renders successfully', () => {
    render(<Loading />)
    // Use screen.debug() to see output.
    expect(screen.queryByText('Loading...')).toBeInTheDocument()
  })

  it('Empty renders successfully', () => {
    render(<Empty />)
    expect(screen.queryByText('Empty')).toBeInTheDocument()
  })

  it('Failure renders successfully', () => {
    render(<Failure error={{ message: 'Oh no!' }} />)
    expect(screen.queryByText('Error: Oh no!')).toBeInTheDocument()
  })

  it('Success renders successfully', () => {
    render(
      <Success userExample={{ blogPost: { objectKey: 'objectValue' } }} />
    )
    expect(
      screen.queryByText('{\\"blogPost\\":{\\"objectKey\\":\\"objectValue\\"}}')
    ).toBeInTheDocument()
  })
})
",
}
`;

exports[`generate component files 1`] = `
Object {
  "/path/to/project/web/src/components/Button/Button.js": "const Button = () => {
  return (
    <div>
      <h2>{'Button'}</h2>
      <p>{'Find me in ./web/src/components/Button/Button.js'}</p>
    </div>
  )
}

export default Button
",
  "/path/to/project/web/src/components/Button/Button.test.js": "import { render, cleanup } from '@testing-library/react'

import Button from './Button'

describe('Button', () => {
  afterEach(() => {
    cleanup()
  })
  it('renders successfully', () => {
    expect(() => {
      render(<Button />)
    }).not.toThrow()
  })
})
",
}
`;

exports[`generate layout files 1`] = `
Object {
  "/path/to/project/web/src/layouts/MainNavigationLayout/MainNavigationLayout.js": "const MainNavigationLayout = ({ children }) => {
  return <>{children}</>
}

export default MainNavigationLayout
",
  "/path/to/project/web/src/layouts/MainNavigationLayout/MainNavigationLayout.test.js": "import { render, cleanup } from '@testing-library/react'

import MainNavigationLayout from './MainNavigationLayout'

describe('MainNavigationLayout', () => {
  afterEach(() => {
    cleanup()
  })
  it('renders successfully', () => {
    expect(() => {
      render(<MainNavigationLayout />)
    }).not.toThrow()
  })
})
",
}
`;

exports[`generate page files 1`] = `
Object {
  "/path/to/project/web/src/pages/HomePage/HomePage.js": "const HomePage = () => {
  return (
    <div>
      <h1>HomePage</h1>
      <p>Find me in ./web/src/pages/HomePage/HomePage.js</p>
    </div>
  )
}

export default HomePage
",
  "/path/to/project/web/src/pages/HomePage/HomePage.test.js": "import { render, cleanup } from '@testing-library/react'

import HomePage from './HomePage'

describe('HomePage', () => {
  afterEach(() => {
    cleanup()
  })
  it('renders successfully', () => {
    expect(() => {
      render(<HomePage />)
    }).not.toThrow()
  })
})
",
}
`;

exports[`generate page routes 1`] = `
Array [
  "<Route path=\\"/home\\" page={HomePage} name=\\"home\\" />",
]
`;

exports[`generate services files 1`] = `
Object {
  "/path/to/project/api/src/services/users/users.js": "import { db } from 'src/lib/db'

export const users = () => {
  return db.user.findMany()
}

export const user = ({ id }) => {
  return db.user.findOne({
    where: { id },
  })
}

export const createUser = ({ input }) => {
  return db.user.create({
    data: input,
  })
}

export const updateUser = ({ id, input }) => {
  return db.user.update({
    data: input,
    where: { id },
  })
}

export const deleteUser = ({ id }) => {
  return db.user.delete({
    where: { id },
  })
}
",
  "/path/to/project/api/src/services/users/users.test.js": "import { users } from './users'

describe('users', () => {
  it('returns true', () => {
    expect(true).toBe(true)
  })
})
",
}
`;
